<project name="MyProject" default="dist" basedir=".">
  <description>
    simple example build file
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist" location="dist"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source">
    <!-- Compile the Java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>
<!-- خرابيشي لعند الكلين-->
  	<path id="NecessaryLibraries">
  	        <pathelement location="./UsedLibraries/junit-4.12.jar"/>
  	        <!--matcher-->
  	        <pathelement location="./UsedLibraries/hamcrest-core-1.3.jar"/>
  	        <!--<pathelement location="./UsedLibraries/jacocoant.jar"/>-->
  	    </path>
  	    
  	        
  	    <target name="compile-testcases" depends="compile">
  	        <mkdir dir="${result.testclasses.dir}"/>
  	        <javac srcdir="${./bin/aseelproj}"  destdir="${./bin/aseelproj}" debug="true" includeantruntime="false">
  	            <classpath>
  	                
  	                <path refid="NecessaryLibraries"/>
  	                <pathelement location="${./bin/aseelproj}"/>
  	            </classpath>
  	        </javac>        
  	    </target>
  	    
  	    <target name="test" depends="compile-testcases">
  	        <!--fork : each test will run in its own JVM (to seperate test cases)-->
  	        <junit printsummary="true" haltonfailure="true" fork="true">
  	            <classpath>
  	                <path refid="NecessaryLibraries"></path>
  	                <pathelement location="${./bin/aseelproj}"/>
  	                <pathelement location="${./bin/aseelproj}"/>
  	            </classpath>
  	            <formatter type="brief" usefile="false"/>
  	            <batchtest >
  	                <fileset dir="${./bin/aseelproj}" >
  	                     <include name="**/*Test.class"/>
  	                </fileset>
  	            </batchtest>
  	            
  	        </junit>
  	    </target>
  	    
    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/MyProject-${DSTAMP}.jar" basedir="${build}"/>
  </target>

  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>